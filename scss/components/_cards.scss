:root {
  --card-bg: var(--color-white);
  --card-color: var(--color-text);
  --card-border-color: var(--color-border);
  --card-padding: var(--space-md) var(--space-lg) var(--space-lg);
  --card-radius: var(--radius);
  --card-icon-size: 2em;
  --card-title-size: 1.25em;
  --card-link-columns: 1fr;
  --card-link-gap: var(--space-sm);
  --card-header-alignment: center;

  --divider-width: 3.75rem;
}

%sectionBreak {
  margin-top: var(--space-md);
  padding-top: var(--space-lg);
  position: relative;

  &::before {
    content: "";
    display: block;
    width: var(--divider-width);
    height: 5px;
    background: var(--color-secondary);
    position: absolute;
    top: 0;
  }
}

.card {
  $this: #{&};

  color: var(--card-color);
  background-color: var(--card-bg);
  border: 1px solid var(--card-border-color);
  border-radius: var(--card-radius);
  padding: var(--card-padding);

  :is(h1, h2, h3, h4, h5, h6, p, span, li) { color: currentColor; }

  &__grid {
    @include breakpoint(xs) {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      grid-gap: var(--space-md);
    }
  }

  &__header {
    display: flex;
    flex-wrap: wrap;
    align-items: var(--card-header-alignment);
    gap: var(--space-md);

    &, & > a { width: 100%; }

    > section {
      width: 100%;
      margin-top: 0;

      &:empty { display: none; }
    }

    > a {
      display: grid;
      grid-template-columns: minmax(0, min-content) minmax(0, 1fr) minmax(0, min-content);
      align-items: center;
      grid-gap: var(--space-md);

      #{$this}__icon { color: var(--color-secondary); }

      .chevron {
        background: var(--color-primary);
        border-radius: 100%;
        margin-left: auto;
      }
    }
  }

  &__icon {
    display: flex;
    font-size: var(--card-icon-size);
    width: 1em;
    height: auto;
  }

  &__title {
    font-size: var(--card-title-size);
    font-weight: var(--font-medium);
    line-height: 1.2;
    margin-top: 0;
    margin-bottom: 0;
  }

  &__summary {
    margin-top: var(--space-sm);
  }


  &__links {
    @extend %sectionBreak;
    display: grid;
    grid-gap: var(--card-link-gap);

    @include breakpoint(xs) {
      grid-template-columns: var(--card-link-columns);
    }
  }

  /*
  * Modifiers
  */

  // home directory cards
  &--directory {
    --card-bg: var(--color-primary-light);
    --card-color: var(--color-white);
    --card-icon-size: 5em;
    --card-title-size: 2.25em;
    --card-link-columns: repeat(2, minmax(7.5rem, 1fr));
    --card-link-gap: var(--space-md);
    --card-header-alignment: flex-end;

    --btn-bg: var(--color-white);
    --btn-color: var(--color-primary);

    border: none;

    &:nth-child(even) { --card-bg: var(--color-primary); }

    .btn {
      width: 100%;
    }

    .btn--primary:hover {
      // todo fix hover styles
    }
  }

  // alternating bg for home cards
  &--alternate {
    @include breakpoint(sm) { --card-bg: var(--color-primary); }
  }

  // page directory cards
  &--page-directory {
    --divider-width: 1.875rem;

    /*
    * because the SVGs are imported as images, I can't tell the svg to inherit the colour, so instead -
    * I emulate the svg with a mask, and control the colour I want using the background of the psuedo element
    */
    #{$this}__icon {
      position: relative;

      &:before {
        @include size(100%);
        content: "";
        display: block;
        position: absolute;
        opacity: var(--c-psuedo-opacity, 0);
        background: var(--color-secondary);
        mask-image: var(--image-url);
      }
    }

    #{$this}__links a {
      @extend %chevronGrid; // _buttons.scss

      font-weight: var(--font-regular);
      border-bottom: 1px solid var(--color-border);
      padding-bottom: var(--space-sm);

      &:last-child { border-bottom: none; }

      svg {
        * { fill: currentColor; }
      }
    }
  }
}

/*
* Elementor overrides
*/

.elementor-widget-home-user-directory,
.elementor-widget-page-directory {
  &,
  .elementor-widget-container,
  .card {
    height: 100%;
  }
}
